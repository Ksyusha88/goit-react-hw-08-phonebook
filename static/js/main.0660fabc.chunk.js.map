{"version":3,"sources":["redux/contacts/actions.js","Components/Container/Container.jsx","Components/Container/Container.module.css","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","Components/Navigation.js","Components/UserMenu/default-avatar.png","Components/UserMenu/UserMenu.js","Components/AuthNav.js","Components/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","App.js","redux/contacts/reducer.js","redux/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","Container","children","className","style","module","exports","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUsername","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurretnUser","fallback","path","items","id","number","filter","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","autPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactReducer","devTools","process","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0660fabc.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\n\r\nexport const filterContact = createAction('contacts/filterContact');\r\n\r\n\r\n","import style from '../Container/Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={style.Container}> {children} </div>\r\n  );\r\n  export default Container;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2rjVh\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_,  {payload}) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]:() => true,\r\n  [authActions.getCurrentUserSuccess]:() => true,\r\n  [authActions.registerError]:() => false,\r\n  [authActions.loginError]:() => false,\r\n  [authActions.getCurrentUserError]:() => false,\r\n  [authActions.logoutError]:() => false,\r\n})\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n      axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n      axios.defaults.headers.common.Authorization = '';\r\n    },\r\n  };\r\n\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try{\r\n        const response = await axios.post('/users/signup', credentials);\r\n        token.set(response.data.token);\r\n\r\n        dispatch(authActions.registerSuccess(response.data));\r\n    } catch(error){\r\n        dispatch(authActions.registerError(error.message));\r\n    }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n\r\n    try{\r\n        const response = await axios.post('/users/login', credentials);\r\n        token.set(response.data.token);\r\n        \r\n        dispatch(authActions.loginSuccess(response.data));\r\n    } catch (error){\r\n        dispatch(authActions.loginError(error.message));\r\n    }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n  \r\n    try {\r\n      await axios.post('/users/logout');\r\n  \r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    } catch (error) {\r\n      dispatch(authActions.logoutError(error.message));\r\n    }\r\n  };\r\n\r\nconst getCurrentUser =() => async (dispatch, getState)=>{\r\n    const {\r\n        auth: {token: persistedToken},\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n      }\r\n\r\n      token.set(persistedToken);\r\n      dispatch(authActions.getCurrentUserRequest());\r\n\r\n      try {\r\n        const response = await axios.get('/users/current');\r\n    \r\n        dispatch(authActions.getCurrentUserSuccess(response.data));\r\n      } catch (error) {\r\n        dispatch(authActions.getCurrentUserError(error.message));\r\n      }\r\n}; \r\n\r\nexport default {\r\n    register,\r\n    logIn,\r\n    logOut,\r\n    getCurrentUser,\r\n};","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state =>state.auth.user.name;\r\n\r\nexport default {\r\n    getIsAuthenticated,\r\n    getUsername,\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {authSelectors} from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = ({isAuthenticated}) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Главная\r\n    </NavLink>\r\n\r\n    {isAuthenticated && (\r\n    <NavLink\r\n      to=\"/contacts\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Контакты\r\n    </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\n\r\nconst styles = {\r\n    container: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      marginRight: 4,\r\n    },\r\n    name: {\r\n      fontWeight: 700,\r\n      marginRight: 12,\r\n    },\r\n  };\r\n  \r\n  const UserMenu = ({ avatar, name, onLogout }) => (\r\n    <div style={styles.container}>\r\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n      <span style={styles.name}>Welcome, {name}</span>\r\n      <button type=\"button\" onClick={onLogout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  const mapStateToProps = state => ({\r\n    name: authSelectors.getUsername(state),\r\n    avatar: defaultAvatar,\r\n  });\r\n  \r\n  const mapDispatchToProps = {\r\n    onLogout: authOperations.logOut,\r\n  };\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu/UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\n\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n  }) => (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated && routeProps.restricted ? (\r\n          <Redirect to={redirectTo} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n  \r\n  const mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n  });\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import { Component, Suspense, lazy } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport AppBar from './Components/AppBar';\r\nimport { authOperations } from './redux/auth';\r\nimport PrivateRoute from './Components/PrivateRoute';\r\nimport PublicRoute from './Components/PublicRoute';\r\nimport Container from './Components/Container';\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterViews'));\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\nconst ContactsView = lazy(() => import('./views/ContactsViews'));\r\n\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurretnUser();\r\n  }\r\n\r\nrender (){\r\n\r\n  return(\r\n    <Container>\r\n        <AppBar />\r\n        <Suspense fallback={<p>Загружаем...</p>}>\r\n        <Switch>\r\n          <PublicRoute exact path=\"/\" component={HomeView} />\r\n\r\n          <PublicRoute\r\n              path=\"/register\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={RegisterView}\r\n            />\r\n          <PublicRoute\r\n              path=\"/login\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={LoginView}\r\n            />\r\n\r\n          <PrivateRoute \r\n            path=\"/contacts\"\r\n            redirectTo=\"/login\"\r\n            component={ContactsView}\r\n           />\r\n        </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurretnUser: authOperations.getCurrentUser,\r\n};\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n      addContactSuccess,\r\n      deleteContactSuccess,\r\n      filterContact,\r\n      fetchContactSuccess,\r\n} from './actions';\r\n\r\n\r\nconst contactBoock = [\r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n];\r\n\r\n\r\n\r\nconst items = createReducer(contactBoock, {\r\n    [fetchContactSuccess]: ( _ , {payload}) => payload,\r\n    [addContactSuccess]: (state, {payload}) => [...state, payload],\r\n    [deleteContactSuccess]:(state, {payload}) => \r\n    state.filter(({id}) => id !== payload ),\r\n});\r\n\r\n\r\nconst filter = createReducer('', {\r\n    [filterContact]:( _ , {payload} ) => payload,\r\n    //поставила подчеркивание вместо state\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/reducer';\r\nimport {authReducer} from './auth';\r\n\r\n\r\nconst middleware =[\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst autPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist:['token']\r\n}\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(autPersistConfig, authReducer),\r\n    contacts:contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store, persistor};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>,\r\n  // </React.StrictMode>\r\n  document.getElementById('root'),\r\n);\r\n\r\n"],"sourceRoot":""}